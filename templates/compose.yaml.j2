services:
{% if mysql_include %}
  mysql:
    image: hadoop-testing/mysql:${PROJECT_VERSION}
    hostname: mysql.orb.local
    container_name: mysql
    ports:
      - 3306:3306
{% endif %}

  socks5:
    image: serjs/go-socks5-proxy
    hostname: socks5.orb.local
    container_name: socks5
    environment:
      - PROXY_PORT=18070
    ports:
      - 18070:18070

  hadoop-master1:
    image: hadoop-testing/hadoop-master1:${PROJECT_VERSION}
    hostname: hadoop-master1.orb.local
    container_name: hadoop-master1
    ports:
      - 8088:8088
      - 9870:9870
      - 10009:10009
      - 10099:10099
      - 18080:18080
      - 19888:19888
      - 6080:6080
    depends_on:
      - mysql

  hadoop-worker1:
    image: hadoop-testing/hadoop-worker1:${PROJECT_VERSION}
    hostname: hadoop-worker1.orb.local
    container_name: hadoop-worker1
    depends_on:
      - hadoop-master1

  hadoop-worker2:
    image: hadoop-testing/hadoop-worker2:${PROJECT_VERSION}
    hostname: hadoop-worker2.orb.local
    container_name: hadoop-worker2
    depends_on:
      - hadoop-master1

  hadoop-worker3:
    image: hadoop-testing/hadoop-worker3:${PROJECT_VERSION}
    hostname: hadoop-worker3.orb.local
    container_name: hadoop-worker3
    depends_on:
      - hadoop-master1

{% if kerberos_enabled %}
  kdc:
    image: hadoop-testing/kdc:${PROJECT_VERSION}
    hostname: kdc.orb.local
    container_name: kdc
    ports:
      - 88:88
      - 89:89
{% endif %}

{% if prometheus_include %}
  prometheus:
    image: prom/prometheus
    hostname: prometheus.orb.local
    container_name: prometheus
    volumes:
      - ./files/etc/prometheus:/etc/prometheus
    ports:
      - 9090:9090
{% endif %}

{% if loki_include %}
  loki:
    image: grafana/loki:${LOKI_VERSION}
    hostname: loki.orb.local
    container_name: loki
    volumes:
      - ./files/etc/loki:/etc/loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/config.yaml
{% endif %}

{% if grafana_include  %}
  grafana:
    image: grafana/grafana-oss:${GRAFANA_VERSION}
    hostname: grafana.orb.local
    container_name: grafana
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - ./files/etc/grafana/provisioning:/etc/grafana/provisioning
      - ./files/var/lib/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - 3000:3000
{% endif %}

{% if kafka_include %}
  kafka:
    image: bitnami/kafka:{{ kafka_version }}
    hostname: kafka.orb.local
    container_name: kafkabroker
    ports:
      - 9092:9092
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=hadoop-master1.orb.local:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - hadoop-master1
{% endif %}

